@page "/ArticlePreview"


@using NtFreX.Blog.Services
@using NtFreX.Blog.Auth
@using NtFreX.Blog.Model
@inject ArticleService articleService

@inject AuthorizationManager authorizationManager

<NavLink class="nav-link article-preview" href="@($"article/{Article.Id}")">
    <div class="card">
        <div class="card-body">
            @if (!ArticleService.IsPublished(Article))
            {
                <span class="alert-warning">Unpublished</span>
            }

            @if (authorizationManager.IsAdmin())
            {
                <div style="float:right;">
                    <span>@visits visits</span>

                    <NavLink href="@($"/edit/{Article.Id}")">
                        <button type="button" class="btn btn-primary">Edit</button>
                    </NavLink>
                </div>
            }

            <h5 class="card-title">@Article.Title</h5>
            <h6 class="card-subtitle mb-2 text-muted">@Article.Date.ToShortDateString() @Article.Subtitle</h6>

            @if (Tags != null)
            {
                @foreach (var tag in Tags.Where(d => d.ArticleId == Article.Id))
                {
                    <Tag Name="@tag.Name" />
                }
            }
        </div>
    </div>
</NavLink>

@code {
    [Parameter]
    public ArticleModel Article { get; set; }

    [Parameter]
    public IReadOnlyList<TagModel> Tags { get; set; }

    private long visits;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        visits = await articleService.CountVisitorsAsync(Article.Id.ToString());
    }
}
