@using NtFreX.Blog.Client.Pages

@inject HttpClient Http

<div>
    <div class="nav flex-column">
        <NavLink href="" Match="NavLinkMatch.All">
            <div style="color: white; text-align: center; margin: 15px 4px 15px 4px; font-family: Arial; font-size: 15px; ">
                @if (!string.IsNullOrEmpty(Configuration.BlogConfiguration.BlogOwnerProfileImage))
                {
                    <img height="113" width="113" src="@Configuration.BlogConfiguration.BlogOwnerProfileImage" alt="Me">
                }
                <p style="font-weight: bold; margin-top: 15px; ">@Configuration.BlogConfiguration.BlogTitle</p>
                <p>@Configuration.BlogConfiguration.BlogDescription</p>
                <p>@Configuration.BlogConfiguration.BlogOwnerEmail</p>
            </div>
        </NavLink>

        <div class="links">
            @if(!string.IsNullOrEmpty(Configuration.BlogConfiguration.TwitterUrl))
            {
                <div><a href="@Configuration.BlogConfiguration.TwitterUrl"><img src="twitter.ico" alt="Titter" />Twitter</a></div>
            }
            @if(!string.IsNullOrEmpty(@Configuration.BlogConfiguration.StackOverflowUrl)) 
            { 
                <div><a href="@Configuration.BlogConfiguration.StackOverflowUrl"><img src="stackoverflow.ico" alt="Stack Overflow" />Stack Overflow</a></div>
            }
            @if (!string.IsNullOrEmpty(Configuration.BlogConfiguration.GithubUrl))
            {
                <div><a href="@Configuration.BlogConfiguration.GithubUrl"><img src="github.svg" alt="Github" />GitHub</a></div>
            }
        </div>

        <div class="tools">
            <NavLink href="@($"tools/unixtime")">Unix time</NavLink> |
            <NavLink href="@($"tools/base64")">Base64</NavLink> |
            <a href="https://regex101.com/" target="_blank">RegEx</a> |
            <a href="https://jwt.io/" target="_blank">JWT</a>
        </div>

        <div style="padding:4px;">
            @if (tags != null)
            {
                @foreach (var tag in tags)
                {
                    <Tag Name="@tag" />
                }
            }
        </div>
    </div>
</div>

@code {
    private string[] tags;

    protected override async Task OnInitializedAsync()
    {
        tags = await Http.GetFromJsonAsync<string[]>("/api/tag/distinctPublished");
    }
}